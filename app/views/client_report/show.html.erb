<%= form_for @issue, url: client_report_index_path do |form| %>
  <%= hidden_field_tag :project_id, @project.id %>
  <% if params[:issue_id] %>
    <div class="btn-primary" style="padding: 12px; text-align: center; margin-bottom: 25px">
      <%= Issue.find_by_id(params[:issue_id])&.subject %> - was added
    </div>
  <% end %>
  <div class="form-group">
    <% if @issue.safe_attribute? 'subject' %>
      <p><%= form.text_field :subject, :required => true, class: 'form-control', placeholder: l(:field_subject), style: 'width: 100%' %></p>
    <% end %>
  </div>
  <div class="form-group">
    <% if @issue.safe_attribute? 'description' %>
      <p>
        <%= link_to_function content_tag(:span, l(:button_edit), :class => 'icon icon-edit'), '$(this).hide(); $("#issue_description_and_toolbar").show()' unless @issue.new_record? %>
        <%= form.text_area :description,
                           :cols => 60,
                           :rows => 6,
                           :accesskey => accesskey(:edit),
                           :class => 'form-control', placeholder: l(:field_description),
                           :no_label => true %>

      </p>
    <% end %>
  </div>
  <div class="form-group" style="overflow: hidden">
    <div class="input-file-trigger" id="dropfile" style="position: relative; width: 100%;  height: 110px; border: 3px dashed gray; text-align: center; padding-top: 30px">
      <span>
        <%= image_tag 'upload-cloud.svg', plugin: 'redmine_tclub_support', style: '' %><br/>
        <span style="">
          Add files here
        </span>
      </span>
    </div>


    <% container = @issue %>
    <% attachment_param ||= 'attachments' %>
    <% saved_attachments ||= container.saved_attachments if defined?(container) && container %>
    <% multiple = true unless defined?(multiple) && multiple == false %>
    <% show_add = multiple || saved_attachments.blank? %>
    <% description = (defined?(description) && description == false ? false : true) %>
    <% css_class = (defined?(filedrop) && filedrop == false ? '' : 'filedrop') %>

    <span class="attachments_form">
      <span class="attachments_fields">
        <% if saved_attachments.present? %>
          <% saved_attachments.each_with_index do |attachment, i| %>
            <span id="attachments_p<%= i %>">
              <%= text_field_tag("#{attachment_param}[p#{i}][filename]", attachment.filename, :class => 'filename') %>
              <% if attachment.container_id.present? %>
                <%= link_to l(:label_delete), "#", :onclick => "$(this).closest('.attachments_form').find('.add_attachment').show(); $(this).parent().remove(); return false;", :class => 'icon-only icon-del' %>
                <%= hidden_field_tag "#{attachment_param}[p#{i}][id]", attachment.id %>
              <% else %>
                <%= text_field_tag("#{attachment_param}[p#{i}][description]", attachment.description, :maxlength => 255, :placeholder => l(:label_optional_description), :class => 'description') if description %>
                <%= link_to('&nbsp;'.html_safe, attachment_path(attachment, :attachment_id => "p#{i}", :format => 'js'), :method => 'delete', :remote => true, :class => 'icon-only icon-del remove-upload') %>
                <%= hidden_field_tag "#{attachment_param}[p#{i}][token]", attachment.token %>
              <% end %>
            </span>
          <% end %>
        <% end %>
      </span>
      <span hidden>

      <span class="add_attachment" style="display:none;">
        <%= file_field_tag "#{attachment_param}[dummy][file]",
                           :id => nil,
                           :class => "file_selector #{css_class}",
                           :multiple => multiple,
                           :onchange => 'addInputFiles(this);',
                           :data => {
                               :max_file_size => Setting.attachment_max_size.to_i.kilobytes,
                               :max_file_size_message => l(:error_attachment_too_big, :max_size => number_to_human_size(Setting.attachment_max_size.to_i.kilobytes)),
                               :max_concurrent_uploads => Redmine::Configuration['max_concurrent_ajax_uploads'].to_i,
                               :upload_path => upload_client_report_index_path(:format => 'js'),
                               :param => attachment_param,
                               :description => description,
                               :description_placeholder => l(:label_optional_description)
                           } %>
        (<%= l(:label_max_size) %>: <%= number_to_human_size(Setting.attachment_max_size.to_i.kilobytes) %>)
      </span>
      </span>
    </span>
    <script>
        $(document).ready(function(){
            // initialisation des variables
            var fileInput  = document.querySelector( ".file_selector" ),
                button     = document.querySelector( ".input-file-trigger" )

            // action lorsque la "barre d'espace" ou "Entrée" est pressée
            button.addEventListener( "keydown", function( event ) {
                if ( event.keyCode == 13 || event.keyCode == 32 ) {
                    fileInput.focus();
                }
            });

            // action lorsque le label est cliqué
            button.addEventListener( "click", function( event ) {
                // fileInput.focus();
                fileInput.click();
                return false;
            });



            $(document).on('dragenter', '#dropfile', function() {
                $(this).css('border', '3px dashed blue');
                return false;
            });

            $(document).on('dragover', '#dropfile', function(e){
                e.preventDefault();
                e.stopPropagation();
                $(this).css('border', '3px dashed #2BAA48');
                return false;
            });

            $(document).on('dragleave', '#dropfile', function(e) {
                e.preventDefault();
                e.stopPropagation();
                $(this).css('border', '3px dashed #2BAA48');
                return false;
            });

            $(document).on('drop', '#dropfile', function(e) {
                if(e.originalEvent.dataTransfer){
                    if(e.originalEvent.dataTransfer.files.length) {
                        // Stop the propagation of the event
                        e.preventDefault();
                        e.stopPropagation();
                        $(this).css('border', '3px dashed green');
                        // Main function to upload
                        handleFileDropEvent(e)
                    }
                }
                else {
                    $(this).css('border', '3px dashed #BBBBBB');
                }
                return false;
            });

        })

    </script>
    <%= javascript_include_tag 'attachments' %>
  </div>
  <div class="form-group" style="margin-bottom: 30px; font-size: 12px">
    T Club Terrace är en prisbelönt kreativ byrå,

    specialiserad på att skapa digitala produkter.
  </div>
  <div class="row">
    <div id="div_btn_create" class="col-xs-12 col-sm-12 col-md-12 col-lg-6" style="margin-top: 10px; "> <%= submit_tag l(:button_create), class: 'btn btn-primary', style: 'margin:0; float: left; width: 100%;' %>
    </div>
    <div id="div_btn_continue" class="col-xs-12 col-sm-12 col-md-12 col-lg-6" style="margin-top: 10px; ">  <%= submit_tag l(:button_create_and_continue), :name => 'continue', class: 'btn btn-primary', style: 'margin:0; float: right; width: 100%;' %></div>

  </div>

<% end %>

<style>
  @media screen and (min-width: 992px) {
    #div_btn_create{
      padding-right: 1px
    }
    #div_btn_continue{
      padding-left: 0
    }
  }
</style>
